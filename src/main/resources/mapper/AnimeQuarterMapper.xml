<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fubukianime.dao.AnimeQuarterDao">

    <resultMap id="BaseResultMap" type="com.fubukianime.domain.AnimeQuarter">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="years" column="years" jdbcType="VARCHAR"/>
        <result property="quarter" column="quarter" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--新增较季点-->
    <insert id="addComQuarter">
        insert into anime_quarter(years, quarter, deleted)
        values ((select b.id from anime_year b where #{years} = b.year),
                #{quarter} , 0)
    </insert>

    <!--查询较季表-->
    <select id="selectComQuarter" resultType="com.fubukianime.domain.AnimeQuarter">
        SELECT C.id                         id,
               CONCAT(D.year, E.quarter_CN) bingeWatchingQuarter,
               C.SUM                        bingeWatchingSUM,
               C.COM                        bingeWatchingCompare,
               C.BEN                        currentSeasonNum,
               C.QIAN                       lastSeasonNum,
               C.TING                       stopLiveNum,
               C.AVGSCORE                   averageScore
        FROM ((select A.id,
                      A.years,
                      A.bquarter,
                      A.SUM,
                      concat(truncate(((A.SUM - B.SUM) / B.SUM) * 100, 2), '%') COM,
                      A.BEN,
                      A.QIAN,
                      A.TING,
                      TRUNCATE(A.AVGSCORE, 2)                                   AVGSCORE
               from (select T1.id,
                            T1.years,
                            T1.bquarter,
                            T1.x + IFNULL(T2.y, 0) + IFNULL(T3.z, 0)     SUM,
                            T1.x                                         BEN,
                            IFNULL(T2.y, 0)                              QIAN,
                            IFNULL(T3.z, 0)                              TING,
                            if(t3s is null, if(t2s is null, t1s / T1.x, (t1s + t2s) / (T1.x + T2.y)),
                               (t1s + t2s + t3s) / (T1.x + T2.y + T3.z)) AVGSCORE
                     from (select b.id,
                                  b.years,
                                  b.quarter    bquarter,
                                  a.binge_watching_year,
                                  c.quarter,
                                  count(*)     x,
                                  sum(a.score) t1s
                           from anime_main a
                                    join quarter c on a.binge_watching_quarter = c.id,
                                anime_quarter b
                           where a.binge_watching_type = 2 and a.binge_watching_year = b.years and c.quarter = b.quarter
                              or a.binge_watching_type = 3 and a.binge_watching_year = b.years and c.quarter = b.quarter
                              or a.binge_watching_type = 4 and a.binge_watching_year = b.years and c.quarter = b.quarter
                           group by b.years, b.quarter
                           order by b.years, b.quarter) T1
                              LEFT JOIN (select b.id,
                                                b.years,
                                                b.quarter    bquarter,
                                                a.complete_year,
                                                d.quarter,
                                                count(*)     y,
                                                sum(a.score) t2s
                                         from anime_quarter b,
                                              (anime_main a join quarter c on a.binge_watching_quarter = c.id)
                                                  join quarter d on a.complete_quarter = d.id
                                         where a.binge_watching_type = 3 and a.complete_year = b.years and
                                               a.binge_watching_year = b.years and c.quarter &lt; b.quarter and
                                               d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 3 and a.complete_year = b.years and
                                               a.binge_watching_year &lt; b.years and d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 3 and a.complete_year &gt; b.years and
                                               if(a.binge_watching_year = b.years, c.quarter &lt; b.quarter,
                                                  b.years &gt; a.binge_watching_year)
                                         group by b.years, b.quarter
                                         order by b.years, b.quarter) T2
                                        ON T1.years = T2.years AND T1.bquarter = T2.bquarter
                              LEFT JOIN (select b.id,
                                                b.years,
                                                b.quarter    bquarter,
                                                a.complete_year,
                                                d.quarter,
                                                count(*)     z,
                                                sum(a.score) t3s
                                         from anime_quarter b,
                                              (anime_main a join quarter c on a.binge_watching_quarter = c.id)
                                                  join quarter d on a.complete_quarter = d.id
                                         where a.binge_watching_type = 4 and a.complete_year = b.years and
                                               a.binge_watching_year = b.years and c.quarter &lt; b.quarter and
                                               d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 4 and a.complete_year = b.years and
                                               a.binge_watching_year &lt; b.years and d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 4 and a.complete_year &gt; b.years and
                                               if(a.binge_watching_year = b.years, c.quarter &lt; b.quarter,
                                                  b.years &gt; a.binge_watching_year)
                                         group by b.years, b.quarter
                                         order by b.years, b.quarter) T3
                                        ON T1.years = T3.years AND T1.bquarter = T3.bquarter) A,
                    (select T1.id,
                            T1.years,
                            T1.bquarter,
                            T1.x + IFNULL(T2.y, 0) + IFNULL(T3.z, 0)     SUM,
                            T1.x                                         BEN,
                            IFNULL(T2.y, 0)                              QIAN,
                            IFNULL(T3.z, 0)                              TING,
                            if(t3s is null, if(t2s is null, t1s / T1.x, (t1s + t2s) / (T1.x + T2.y)),
                               (t1s + t2s + t3s) / (T1.x + T2.y + T3.z)) AVGSCORE
                     from (select b.id,
                                  b.years,
                                  b.quarter    bquarter,
                                  a.binge_watching_year,
                                  c.quarter,
                                  count(*)     x,
                                  sum(a.score) t1s
                           from anime_main a
                                    join quarter c on a.binge_watching_quarter = c.id,
                                anime_quarter b
                           where a.binge_watching_type = 2 and a.binge_watching_year = b.years and c.quarter = b.quarter
                              or a.binge_watching_type = 3 and a.binge_watching_year = b.years and c.quarter = b.quarter
                              or a.binge_watching_type = 4 and a.binge_watching_year = b.years and c.quarter = b.quarter
                           group by b.years, b.quarter
                           order by b.years, b.quarter) T1
                              LEFT JOIN (select b.id,
                                                b.years,
                                                b.quarter    bquarter,
                                                a.complete_year,
                                                d.quarter,
                                                count(*)     y,
                                                sum(a.score) t2s
                                         from anime_quarter b,
                                              (anime_main a join quarter c on a.binge_watching_quarter = c.id)
                                                  join quarter d on a.complete_quarter = d.id
                                         where a.binge_watching_type = 3 and a.complete_year = b.years and
                                               a.binge_watching_year = b.years and c.quarter &lt; b.quarter and
                                               d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 3 and a.complete_year = b.years and
                                               a.binge_watching_year &lt; b.years and d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 3 and a.complete_year &gt; b.years and
                                               if(a.binge_watching_year = b.years, c.quarter &lt; b.quarter,
                                                  b.years &gt; a.binge_watching_year)
                                         group by b.years, b.quarter
                                         order by b.years, b.quarter) T2
                                        ON T1.years = T2.years AND T1.bquarter = T2.bquarter
                              LEFT JOIN (select b.id,
                                                b.years,
                                                b.quarter    bquarter,
                                                a.complete_year,
                                                d.quarter,
                                                count(*)     z,
                                                sum(a.score) t3s
                                         from anime_quarter b,
                                              (anime_main a join quarter c on a.binge_watching_quarter = c.id)
                                                  join quarter d on a.complete_quarter = d.id
                                         where a.binge_watching_type = 4 and a.complete_year = b.years and
                                               a.binge_watching_year = b.years and c.quarter &lt; b.quarter and
                                               d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 4 and a.complete_year = b.years and
                                               a.binge_watching_year &lt; b.years and d.quarter &gt;= b.quarter
                                            or a.binge_watching_type = 4 and a.complete_year &gt; b.years and
                                               if(a.binge_watching_year = b.years, c.quarter &lt; b.quarter,
                                                  b.years &gt; a.binge_watching_year)
                                         group by b.years, b.quarter
                                         order by b.years, b.quarter) T3
                                        ON T1.years = T3.years AND T1.bquarter = T3.bquarter) B
               where A.id = 1 AND B.id = 1
                  OR B.id = A.id - 1
               ORDER BY A.id) C JOIN anime_year D on C.years = D.id)
                 JOIN quarter E ON C.bquarter = E.quarter
order by C.id

    </select>


</mapper>

